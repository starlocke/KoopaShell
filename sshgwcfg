#!/usr/bin/php
<?php
/***********************************************************************
 * @author Victor Yap <victor.yap@alumni.concordia.ca>
 * Purpose:
 *   To make it easier to manually add/remove "sshgw-required" hosts
 *   in your personal ~/.ssh/config
 **********************************************************************/

function show_usage(){
  $name = pathinfo(__FILE__, PATHINFO_BASENAME);
  echo <<<EOT
Usage: {$name} CMD HOSTNAME
  where CMD = add | rm

EOT
;
  exit(400);
}
if(empty($_SERVER['argv'][1]) || empty($_SERVER['argv'][2])){
  show_usage();
}

$command = $_SERVER['argv'][1];
$target_host = $_SERVER['argv'][2];

$ssh_config_filename = "{$_SERVER['HOME']}/.ssh/config";
$ssh_config = file($ssh_config_filename);

$found_proxylist = false;
for($i = 0; $i < count($ssh_config); ++$i){
  $line = $ssh_config[$i];
  if(strpos($line, '# sshgw proxylist') === 0){
    $hosts_line = trim($ssh_config[$i + 1]);
    list($null, $hosts) = explode(' ', $hosts_line);
    $hosts = explode(',', $hosts);
    $found_proxylist = true;
  }
}

if(!$found_proxylist){
  echo "503: Service unavailable - Proxylist autoconfig section not found.\n";
  exit(503);
}

switch($command){
  case 'add':
    if(in_array($target_host, $hosts)){
      echo "409: Conflict - Host '{$target_host}' is already registered.\n";
      exit(409);
    }
    $hosts[] = $target_host;
    $success_msg = "Host '{$target_host}' added.";
  break;
  case 'rm':
    for($i = 0; $i < count($ssh_config); ++$i){
      $line = $ssh_config[$i];
      if(strpos($line, '# sshgw proxylist') === 0){
        $hosts_line = trim($ssh_config[$i + 1]);
        list($null, $hosts) = explode(' ', $hosts_line);
        $hosts = explode(',', $hosts);
        $keys = array_keys($hosts, $target_host);
        if(count($keys) == 0){
          echo "404: Not found - Host '{$target_host}'.\n";
          exit(404);
        }
        foreach($keys as $key){
          unset($hosts[$key]);
        }
        break;
      }
    }
    $success_msg = "Host '{$target_host}' removed.";
  break;
  default:
    show_usage();
  break;
}

$hosts = implode(',', $hosts);
$new_line = "Host {$hosts}\n";
$ssh_config[$i+1] = $new_line;
file_put_contents($ssh_config_filename, implode('', $ssh_config));
echo "{$success_msg}\n";
